% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iDA.R
\name{iDA_core}
\alias{iDA_core}
\title{Find embedding space using iterative LDA}
\usage{
iDA_core(
  var.data,
  k.param = 10,
  prune.SNN = 1/15,
  dims.use = 10,
  diag = TRUE,
  c.param = NULL,
  cluster.method = "walktrap"
)
}
\arguments{
\item{var.data}{(matrix) A matrix of scaled count data for variable genes 
to find embedding for. (sample x variable features)}

\item{k.param}{(numeric) Defines k for the k-nearest neighbor algorithm 
(passed to [`getSNN`])}

\item{prune.SNN}{(numeric) Sets the cutoff for acceptable Jaccard index when
computing the neighborhood overlap for the SNN construction. Any edges with
values less than or equal to this will be set to 0 and removed from the SNN
graph. Essentially sets the strigency of pruning (0 --- no pruning, 1 ---
prune everything). Passed to [`getSNN`]}

\item{dims.use}{(numeric) A vector of the dimensions to use in construction 
of the SNN graph (e.g. To use the first 10 PCs, pass 1:10) 
(passed to [`getSNN`])}

\item{diag}{Diagonalize the within class scatter matrix (assume the features
are independent within each cluster)}

\item{c.param}{(numeric) Defines the number of desired clusters to be found
in the embedding}

\item{cluster.method}{What clustering method to use}
}
\value{
n number of dataframes for each cluster's data
}
\description{
Takes scaled data and iterates between clustering using the Louvain 
 community detection method and embedding in LDA space, then recluster
 in the LDA transformed data space.
}
